# Multi-stage build for optimized image size
# Stage 1: Build the application
FROM openjdk:21-jdk-slim AS builder

WORKDIR /app

# Copy the Gradle wrapper and build files
COPY gradlew .
COPY gradle gradle
COPY build.gradle .
COPY settings.gradle .

# Make the gradlew script executable
RUN chmod +x gradlew

# Copy the source code
COPY src src

# Build the application (skip tests for faster build)
RUN ./gradlew build -x test

# Stage 2: Create the runtime image
FROM eclipse-temurin:21-jre-alpine

WORKDIR /app

# Create a non-root user for security
RUN addgroup --system spring && adduser --system spring --ingroup spring
USER spring:spring

# Copy the built JAR from the builder stage (only the executable JAR, not the plain one)
COPY --from=builder /app/build/libs/*.jar app.jar

# Expose the port that the application runs on
EXPOSE 8081

# Set JVM options for container environment
ENV JAVA_OPTS="-Xmx512m -Xms256m"

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8081/actuator/health || exit 1

# Set the entry point to run the application
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]